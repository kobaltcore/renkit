[package]
name = "renkit"
version = "4.5.0"
edition = "2021"
repository = "https://github.com/kobaltcore/renkit"
description = "A collection of tools to help you organise and use Ren'Py instances from the command line."
homepage = "https://github.com/kobaltcore/renkit"

[dependencies]
# System
zip = "2.2.0"
rsa = "0.9.6"
rand = "0.8.5"
regex = "1.11.1"
base64 = "0.22.1"
anyhow = "1.0.93"
num_cpus = "1.16.0"
itertools = "0.13.0"
command-executor = "0.1.1"
tokio = { version = "1.41.1", features = ["full"] }
# this is only here because it doesn't enable profileapi
# as a feature by default, breaking the build on windows
winapi = { version = "0.3.9", features = ["profileapi"] }
# Parsing
toml = "0.8.19"
plist = "1.7.0"
lol_html = "2.0.0"
serde_json = "1.0.132"
serde = { version = "1.0.214", features = ["derive"] }
# Filesystem
home = "0.5.9"
tar = "0.4.43"
bzip2 = "0.4.4"
jwalk = "0.8.1"
zip-extract = "0.2.1"
# Internet
trauma = "2"
webbrowser = "1.0.2"
reqwest = { version = "^0.12.9", default-features = false, features = [
    "native-tls-vendored",
] }
# Apple
apple-bundles = "0.20.0"
apple-codesign = "0.28.0"
x509-certificate = "0.24.0"
app-store-connect = "0.6.0"
# CLI
ratatui = "0.29.0"
crossterm = "0.28.1"
wait-timeout = "0.2.0"
tui-textarea = "0.7.0"
tui-scrollview = "0.5.0"
clap = { version = "4.5.20", features = ["derive"] }
indicatif = { version = "0.17.8", features = ["improved_unicode", "rayon"] }
# Images
image = "0.25.5"
rgb = "0.8.50"
imgref = "1.11.0"
ravif = "0.11.11"
webp = "0.3.0"
libwebp-sys = { version = "0.9.6", features = ["avx2", "sse41"] }
# jpegxl-rs = { version = "0.8.3", features = ["vendored"] }
# RustPython
rustpython-vm = "0.4.0"
rustpython-stdlib = "0.4.0"
rustpython = { version = "0.4.0", features = ["freeze-stdlib"] }
rustpython-pylib = { version = "0.4.0", features = ["freeze-stdlib"] }
# Testing
test-context = "0.3.0"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
strip = true

[profile.release]
strip = true

[workspace.metadata.dist.dependencies.homebrew]
"openjdk@21" = { stage = ["run"] }

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "kobaltcore/homebrew-renkit"
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "aarch64-unknown-linux-gnu",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = true
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# custom build steps
github-build-setup = "../templates/build_setup.yml"

[workspace.metadata.dist.github-custom-runners]
aarch64-unknown-linux-gnu = "buildjet-8vcpu-ubuntu-2204-arm"
# x86_64-unknown-linux-gnu = "self-hosted"
# aarch64-unknown-linux-musl = "buildjet-8vcpu-ubuntu-2204-arm"
