[tasks.notarize] # required if matching task is enabled
type = "notarize"
enabled = false
priorities = { post_build = 0 }                        # the priority that determines the orders tasks will run in, defaults to 0
on_builds = ["mac"]                                    # builds this task should run for. empty by default
bundle_id = "com.my-game"                              # the bundle ID of your game, typically in reverse domain notation
key_file = "certificates/private-key.pem"              # the path to the private key file generated during the provisioning process
cert_file = "certificates/developerID_application.cer" # the path to the Apple-generated certificate file generated during the provisioning process
app_store_key_file = "certificates/app-store-key.json" # the path to the combined App Store key file generated during the provisioning process
no_zip = false                                         # if given, skips creation of a signed and notarized ZIP file, defaults to false
no_dmg = false                                         # if given, skips creation of a signed and notarized DMG file, defaults to false

[tasks.keystore] # required if matching task is enabled
type = "keystore"
enabled = false
priorities = { pre_build = 0 } # the priority that determines the orders tasks will run in, defaults to 0
on_builds = [
    "android_apk",
    "android_aab",
] # builds this task should run for. empty by default
keystore_apk = "<base64-encoded keystore file>" # the base-64 encoded binary keystore file for the APK bundles
keystore_aab = "<base64-encoded keystore file>" # the base-64 encoded binary keystore file for the AAB bundles
alias = "<keystore-alias>" # the optional alias for both keystores
password = "<keystore-password>" # the optional password for both keystores

[tasks.convert_images]
type = "convert_images"
enabled = false
format = "webp" # webp or avif
priorities = { pre_build = 0 } # the priority that determines the orders tasks will run in, defaults to 0
on_builds = [
    "pc",
    "win",
    "linux",
    "mac",
    "web",
    "steam",
    "market",
    "android_apk",
    "android_aab",
] # builds this task should run for. empty by default
# extensions: a list of file extensions to convert, defaults to ["png", "jpg", "jpeg"]
# recursive: scans directories recursively if enabled, otherwise only scans the immediate directory. defaults to true
# lossless: converts to lossless version of the selected image format if enabled, otherwise converts to lossy. defaults to true
paths."game/images/cg" = { extensions = [
    "png",
    "jpg",
    "jpeg",
], recursive = true, lossless = true } # default values
paths."game/images/bg" = { lossless = false }
paths."game/images" = {} # all parameters are optional

[tasks.custom_task_1] # Maps to Python class CustomTask1Task (upper camel case + "Task" suffix)
type = "custom"
enabled = false
priorities = { pre_build = 0, post_build = 0 } # priorities per build stage to determine ordering, defaults to 0
on_builds = [
    "pc",
    "win",
    "linux",
    "mac",
] # builds this task should run for. empty by default

[build] # required, at least one item must be 'true'
pc = false           # Windows + Linux
win = false          # Windows
linux = false        # Linux
mac = false          # macOS
web = false          # Web
steam = false        # Steam
market = false       # Multiple Markets (i.e. Itch.io)
android_apk = false  # Android Universal APK
android_aab = false  # Android Play Store Bundle
custom_build = false # Custom build type defined using Ren'Py's build.package()

[options]
task_dir = "tasks"       # optional path to a directory containing custom tasks
clear_output_dir = false # whether to clear the output directory on startup

[renutil]
version = "8.3.2"    # the Ren'Py version to use (required)
registry = "cache"   # the directory to store installation files in
update_pickle = true # causes renutil to update the Pickle version from 2 to 5 for speed improvements at the cost of incompatiblity with Ren'Py 7.x files
